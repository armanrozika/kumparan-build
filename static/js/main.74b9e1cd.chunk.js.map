{"version":3,"sources":["component/Users.js","actions/usersAction.js","component/AddPost.js","actions/postsAction.js","component/Posts.js","component/User.js","actions/userAction.js","component/AddComments.js","actions/commentsAction.js","component/Comments.js","component/SinglePost.js","actions/singlePostAction.js","component/Albums.js","actions/albumsAction.js","component/Photos.js","actions/photoActions.js","Dashboard.js","store/usersReducers.js","store/userReducers.js","store/singlePostReducer.js","store/albumsReducer.js","store/postsReducer.js","store/commentsReducer.js","store/photoReducer.js","store/rootReducer.js","index.js"],"names":["Users","this","props","fetchUsers","userList","users","map","user","react_default","a","createElement","Link","key","id","to","className","name","Component","connect","state","dispatch","fetch","then","res","json","data","type","payload","AddPost","title","body","onChange","e","_this","setState","Object","defineProperty","target","value","onSubmit","preventDefault","post","userId","newuid","createPosts","method","placeholder","console","log","headers","content-type","JSON","stringify","Posts","fetchPosts","userid","nextProps","newPost","posts","unshift","postLists","component_AddPost","User","fetchUser","match","params","email","username","phone","website","component_Posts","getState","AddComments","createComments","Comments","fetchComments","postid","newComment","comments","commentList","comment","component_AddComments","SinglePost","fetchPost","component_Comments","Albums","fetchAlbums","albumList","albums","album","Photos","show","hide","img","imgtitle","hideModal","showModal","fetchPhotos","_this2","photos","photoList","photo","onClick","url","src","thumbnailUrl","alt","Dashboard","HashRouter","Route","exact","path","component","initialState","combineReducers","arguments","length","undefined","action","objectSpread","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_Dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.74b9e1cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchUsers} from '../actions/usersAction'\r\n\r\nclass Users extends Component {\r\n  componentDidMount(){\r\n    this.props.fetchUsers()\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props)\r\n    const userList = this.props.users.map(user=>(\r\n      <Link  key={user.id} to={'/user/' + user.id}>\r\n        <div className=\"users__link\">\r\n          {user.name}\r\n        </div>\r\n      </Link>\r\n    ))\r\n\r\n    return (\r\n      <div>\r\n       {userList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n  users: state.users.users\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUsers})(Users);","\r\nexport function fetchUsers(){\r\n\treturn function(dispatch){\r\n\t\t// console.log('fetch')\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => dispatch({\r\n\t\t\ttype: 'FETCH_USERS',\r\n\t\t\tpayload: data\r\n\t\t}))\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {createPosts} from '../actions/postsAction'\r\n\r\nclass AddPost extends Component {\r\n\tstate = {\r\n\t\ttitle: '',\r\n\t\tbody: '',\r\n\t}\r\n\r\n\tonChange = (e)=>{\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name] : e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tonSubmit = (e)=>{\r\n\t\te.preventDefault();\r\n\r\n\t\tconst post = {\r\n\t\t\ttitle: this.state.title,\r\n\t\t\tbody: this.state.body,\r\n\t\t\tuserId: this.props.newuid\r\n\t\t}\r\n\r\n\t\t//make post request\r\n\t\tthis.props.createPosts(post)\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"addpost\">\r\n\t\t\t\t<form onSubmit={this.onSubmit} method=\"POST\">\r\n\t\t\t\t\t<input onChange={this.onChange} type=\"text\" name=\"title\" placeholder=\"title\"/><br/>\r\n\t\t\t\t\t<textarea onChange={this.onChange} type=\"text\" name=\"body\" placeholder=\"body\"/><br/>\r\n\t\t\t\t\t<button type=\"submit\">Add Post</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(null, {createPosts}) (AddPost);\r\n","export function fetchPosts(id){\r\n\treturn function(dispatch){\r\n\t\t//console.log(id)\r\n\t\tfetch('https://jsonplaceholder.typicode.com/posts?userId=' + id)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => dispatch({\r\n\t\t\ttype: 'FETCH_POSTS',\r\n\t\t\tpayload: data\r\n\t\t}))\r\n\t}\r\n}\r\n\r\nexport function createPosts(data){\r\n\treturn function(dispatch){\r\n\t\tconsole.log('make')\r\n\t\tfetch('https://jsonplaceholder.typicode.com/posts',{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'content-type': 'application/json'},\r\n\t\t\tbody: JSON.stringify(data) \r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(post => dispatch({\r\n\t\t\ttype: 'NEW_POSTS',\r\n\t\t\tpayload: post\r\n\t\t}))\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {fetchPosts} from '../actions/postsAction'\r\nimport AddPost from './AddPost'\r\n\r\nclass Posts extends Component {\r\n\tstate = {\r\n\t\ttitle: '',\r\n\t\tbody: ''\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.fetchPosts(this.props.userid)\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps){\r\n\t\tif(nextProps.newPost){\r\n\t\t\tthis.props.posts.unshift(nextProps.newPost)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\t//console.log(this.props.posts)\r\n\t\tconst postLists = this.props.posts.map((post)=>{\r\n\t\t\treturn (\r\n\t\t\t\t<div key={post.id} className=\"post-wrap\">\r\n\t\t\t\t\t<Link  to={\"/singlepost/\" + post.id}>\r\n\t\t\t\t\t\t<p className=\"posts\" >{post.title}</p>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t)\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>POSTS</h2>\r\n\t\t\t\t<AddPost newuid={this.props.userid}/>\r\n\t\t\t\t{postLists}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n  posts: state.posts.posts,\r\n  newPost: state.posts.post\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchPosts}) (Posts);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {fetchUser} from '../actions/userAction'\r\nimport Posts from './Posts'\r\n\r\nclass User extends Component {\r\n\tcomponentDidMount(){\r\n\t   this.props.fetchUser(this.props.match.params.id)\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.user.name = ''\r\n\t\tthis.props.user.email = ''\r\n\t\tthis.props.user.username = ''\r\n\t\tthis.props.user.phone = ''\r\n\t\tthis.props.user.website = ''\r\n\t}\r\n\r\n\trender() {\r\n\t\t//console.log(this.props.user)\r\n\t\treturn (\r\n\t\t\t<div className=\"user\">\r\n\t\t\t\t<div className=\"user__detail\">\r\n\t\t\t\t\t<h3>{this.props.user.name}</h3>\r\n\t\t\t\t\t<p>Username: {this.props.user.username}</p>\r\n\t\t\t\t\t<p>Email: {this.props.user.email}</p>\r\n\t\t\t\t\t<p>Phone: {this.props.user.phone}</p>\r\n\t\t\t\t\t<p>Website: {this.props.user.website}</p>\r\n\t\t\t\t\t<Link className=\"view__albums\" to={'/albums/'+ this.props.match.params.id}>View Albums</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Posts userid={this.props.match.params.id}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n  user: state.user.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchUser})(User);","export function fetchUser(id){\r\n\treturn function(dispatch, getState){\r\n\t\t//console.log(id)\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users/' + id)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => dispatch({\r\n\t\t\ttype: 'FETCH_USER',\r\n\t\t\tpayload: data\r\n\t\t}))\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport {createComments} from '../actions/commentsAction';\r\n\r\nclass AddComments extends Component {\r\n  state= {\r\n    name: '',\r\n    email: '',\r\n    body: ''\r\n  }\r\n  onSubmit = (e)=>{\r\n    e.preventDefault();\r\n\r\n    const post = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      body: this.state.body\r\n    }\r\n\r\n    this.props.createComments(post)\r\n  }\r\n  onChange = (e)=>{\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit} className=\"commentform\">\r\n            <input onChange={this.onChange} name=\"name\" type=\"text\" placeholder=\"name\"/><br/>\r\n            <input onChange={this.onChange} name=\"email\" type=\"text\" placeholder=\"email\"/><br/>\r\n            <textarea onChange={this.onChange} name=\"body\" placeholder=\"messages\"></textarea><br/>\r\n            <button type=\"submit\">Add comment</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, {createComments}) (AddComments);","export function fetchComments(id){\r\n\treturn function(dispatch){\r\n\t\t//console.log(id)\r\n\t\tfetch('https://jsonplaceholder.typicode.com/comments?postId=' + id)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => dispatch({\r\n\t\t\ttype: 'FETCH_COMMENTS',\r\n\t\t\tpayload: data\r\n\t\t}))\r\n\t}\r\n}\r\n\r\nexport function createComments(data){\r\n\treturn function(dispatch){\r\n\t\tconsole.log('make')\r\n\t\tfetch('https://jsonplaceholder.typicode.com/comments',{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'content-type': 'application/json'},\r\n\t\t\tbody: JSON.stringify(data) \r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(post => dispatch({\r\n\t\t\ttype: 'NEW_COMMENTS',\r\n\t\t\tpayload: post\r\n\t\t}))\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AddComments from './AddComments';\r\nimport {fetchComments} from '../actions/commentsAction'\r\n\r\nclass Comments extends Component {\r\n  componentDidMount(){\r\n    this.props.fetchComments(this.props.postid)\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\t\tif(nextProps.newComment){\r\n\t\t\tthis.props.comments.unshift(nextProps.newComment)\r\n\t\t}\r\n  }\r\n  \r\n  render() {\r\n    //console.log(this.props.comments)\r\n    const commentList = this.props.comments.map(comment=>(\r\n      <div key={comment.id}>\r\n        <p className=\"comment__name\">{comment.name} <i>says</i> :</p>\r\n        <p className=\"comment__small\">{comment.body}</p>\r\n      </div>\r\n    ))\r\n    return (\r\n      <div>\r\n        {commentList}\r\n        <AddComments/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: state.comments.comments,\r\n  newComment: state.comments.comment\r\n})\r\nexport default connect(mapStateToProps, {fetchComments}) (Comments);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchPost} from '../actions/singlePostAction';\r\nimport Comments from './Comments'\r\n\r\nclass SinglePost extends Component {\r\n\tcomponentDidMount(){\r\n\t\tthis.props.fetchPost(this.props.match.params.id)\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tthis.props.post.title = ''\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{this.props.post.title}</h2>\r\n\t\t\t\t<p>{this.props.post.body}</p>\r\n\t\t\t\t<h3 className=\"comments\">Comments</h3>\r\n\t\t\t\t<Comments postid={this.props.match.params.id}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tpost: state.post.post\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchPost}) (SinglePost);","export function fetchPost(id){\r\n\treturn function(dispatch){\r\n\t\t//console.log(id)\r\n\t\tfetch('https://jsonplaceholder.typicode.com/posts/' + id)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => dispatch({\r\n\t\t\ttype: 'FETCH_POST',\r\n\t\t\tpayload: data\r\n\t\t}))\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {fetchAlbums} from '../actions/albumsAction'\r\nclass Albums extends Component {\r\n\tcomponentDidMount(){\r\n\t\tthis.props.fetchAlbums(this.props.match.params.id)\r\n\t}\r\n\trender() {\r\n\t\t//console.log(this.props.albums)\r\n\t\tconst albumList = this.props.albums.map(album=>(\r\n\t\t\t<div className=\"albums\" key={album.id}>\r\n\t\t\t\t<Link to={'/photos/' + album.id}>{album.title}</Link>\r\n\t\t\t</div>\r\n\t\t))\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Album List</h2>\r\n\t\t\t\t{albumList}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state)=>({\r\n\talbums: state.albums.albums\r\n})\r\nexport default connect(mapStateToProps, {fetchAlbums}) (Albums);","export function fetchAlbums(id){\r\n\treturn function(dispatch){\r\n\t\t//console.log(id)\r\n\t\tfetch('https://jsonplaceholder.typicode.com/albums?userId=' + id)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => dispatch({\r\n\t\t\ttype: 'FETCH_ALBUMS',\r\n\t\t\tpayload: data\r\n\t\t}))\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchPhotos} from '../actions/photoActions'\r\nclass Photos extends Component {\r\n\tstate = {\r\n\t\tshow: 'photo-hide',\r\n\t\thide: 'photo-hide',\r\n\t\timg: '',\r\n\t\timgtitle: ''\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.props.fetchPhotos(this.props.match.params.id)\r\n\t}\r\n\thideModal = ()=>{\r\n\t\tthis.setState({\r\n\t\t\tshow: 'photo-hide'\r\n\t\t})\r\n\t}\r\n\tshowModal = (id,  title)=>{\r\n\t\tthis.setState({\r\n\t\t\tshow: 'photo-big',\r\n\t\t\timg: id,\r\n\t\t\timgtitle: title\r\n\t\t})\r\n\t}\r\n\trender() {\r\n\t\tconsole.log(this.props.photos)\r\n\t\tconst photoList = this.props.photos.map(photo=>(\r\n\t\t\t<div onClick={()=>this.showModal(photo.url, photo.title)} className=\"photo-item\" key={photo.id}>\r\n\t\t\t\t<img src={photo.thumbnailUrl} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t))\r\n\t\treturn (\r\n\t\t\t<div className=\"photo-wrap\">\r\n\t\t\t\t{photoList}\r\n\t\t\t\t<div className={this.state.show}>\r\n\t\t\t\t\t<div className=\"photo-big-wrap\">\r\n\t\t\t\t\t\t<img src={this.state.img} alt=\"\"/>\r\n\t\t\t\t\t\t<div className=\"photo_title\">\r\n\t\t\t\t\t\t\t{this.state.imgtitle}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div onClick={this.hideModal} className=\"close\">X</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state)=> ({\r\n\tphotos: state.photos.photos\r\n})\r\nexport default connect(mapStateToProps, {fetchPhotos}) (Photos);\r\n","export function fetchPhotos(id){\r\n\treturn function(dispatch){\r\n\t\t//console.log(id)\r\n\t\tfetch('https://jsonplaceholder.typicode.com/photos?albumId=' + id)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => dispatch({\r\n\t\t\ttype: 'FETCH_PHOTOS',\r\n\t\t\tpayload: data\r\n\t\t}))\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { HashRouter, Route} from 'react-router-dom';\r\n\r\nimport Users from './component/Users'\r\nimport User from './component/User'\r\nimport SinglePost from './component/SinglePost'\r\nimport Albums from './component/Albums'\r\nimport Photos from './component/Photos'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    //console.log(this.props)\r\n    return (\r\n      <HashRouter>\r\n        <div className=\"dashboard\">\r\n          <div className=\"dashboard__title\">\r\n            <h1>PEOPLE PAGE</h1>\r\n          </div>\r\n          <Route exact path=\"/\" component={Users}></Route>\r\n          <Route path=\"/user/:id\" component={User}></Route>\r\n          <Route path=\"/singlepost/:id\" component={SinglePost}></Route>\r\n          <Route path=\"/albums/:id\" component={Albums}></Route>\r\n          <Route path=\"/photos/:id\" component={Photos}></Route>\r\n        </div>\r\n      </HashRouter>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n","\r\nconst initialState = {\r\n\tusers: []\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase 'FETCH_USERS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","const initialState = {\r\n\tuser: [],\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase 'FETCH_USER':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","const initialState = {\r\n\tpost: [],\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase 'FETCH_POST':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tpost: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","const initialState = {\r\n\talbums: [],\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase 'FETCH_ALBUMS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\talbums: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","const initialState = {\r\n\tposts: [],\r\n\tpost: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase 'FETCH_POSTS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: action.payload\r\n\t\t\t};\r\n\t\tcase 'NEW_POSTS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tpost: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","const initialState = {\r\n    comments: [],\r\n    comment: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase 'FETCH_COMMENTS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tcomments: action.payload\r\n\t\t\t};\r\n\t\tcase 'NEW_COMMENTS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tcomment: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","const initialState = {\r\n\tphotos: [],\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase 'FETCH_PHOTOS':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tphotos: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {combineReducers} from 'redux';\r\nimport usersReducers from './usersReducers';\r\nimport userReducers from './userReducers';\r\nimport singlePostReducer from './singlePostReducer'\r\nimport albumsReducer from './albumsReducer';\r\nimport postsReducers from './postsReducer';\r\nimport commentsReducer from './commentsReducer';\r\nimport photoReducer from './photoReducer'\r\n\r\nexport default combineReducers({\r\n\tusers: usersReducers,\r\n\tuser: userReducers,\r\n\talbums: albumsReducer,\r\n\tposts: postsReducers,\r\n\tpost: singlePostReducer,\r\n\tcomments: commentsReducer,\r\n\tphotos: photoReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk'\r\nimport './index.css';\r\nimport Dashboard from './Dashboard';\r\nimport rootReducer from './store/rootReducer.js'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(<Provider store={store}><Dashboard /></Provider>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}